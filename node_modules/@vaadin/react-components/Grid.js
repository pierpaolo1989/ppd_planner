export*from"@vaadin/grid/vaadin-grid.js";import{forwardRef as c,useLayoutEffect as G,useRef as E}from"react";import{Grid as m}from"@vaadin/grid/vaadin-grid.js";import*as l from"react";import{createComponent as s}from"./utils/createComponent.js";var p={onActiveItemChanged:"active-item-changed",onCellActivate:"cell-activate",onColumnResize:"column-resize",onExpandedItemsChanged:"expanded-items-changed",onLoadingChanged:"loading-changed",onSelectedItemsChanged:"selected-items-changed",onCellFocus:"cell-focus",onColumnReorder:"column-reorder",onGridDragend:"grid-dragend",onGridDragstart:"grid-dragstart",onGridDrop:"grid-drop",onSizeChanged:"size-changed",onDataProviderChanged:"data-provider-changed"},r=s({elementClass:m,events:p,react:l,tagName:"vaadin-grid"});import{useModelRenderer as g}from"./renderers/useModelRenderer.js";import v from"./utils/useMergedRefs.js";import{jsxs as R}from"react/jsx-runtime";function u(e,n){let[a,d]=g(e.rowDetailsRenderer,{renderMode:"microtask"}),t=E(null),o=v(t,n);return G(()=>{t.current.recalculateColumnWidths=function(...i){queueMicrotask(()=>{Object.getPrototypeOf(this).recalculateColumnWidths.call(this,...i)})}},[]),R(r,{...e,ref:o,rowDetailsRenderer:d,children:[e.children,a]})}var D=c(u);export{D as Grid,m as GridElement};
//# sourceMappingURL=Grid.js.map
